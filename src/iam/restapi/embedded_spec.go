// Code generated by go-swagger; DO NOT EDIT.

package restapi

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"
)

var (
	// SwaggerJSON embedded version of the swagger document used at generation time
	SwaggerJSON json.RawMessage
	// FlatSwaggerJSON embedded flattened version of the swagger document used at generation time
	FlatSwaggerJSON json.RawMessage
)

func init() {
	SwaggerJSON = json.RawMessage([]byte(`{
  "produces": [
    "application/json"
  ],
  "schemes": [
    "https"
  ],
  "swagger": "2.0",
  "info": {
    "description": "Move programming from the user to the machine.",
    "title": "IAM API",
    "version": "1.0.0"
  },
  "paths": {
    "/iam/service_token": {
      "post": {
        "description": "Token endpoint for service to service authentication",
        "consumes": [
          "application/x-www-form-urlencoded"
        ],
        "tags": [
          "iam"
        ],
        "summary": "Token endpoint for service to service authentication",
        "parameters": [
          {
            "maxLength": 1000,
            "type": "string",
            "description": "the service provider audience uri.",
            "name": "audience",
            "in": "formData"
          },
          {
            "maxLength": 1000,
            "type": "string",
            "description": "the service provider domain name.",
            "name": "domain",
            "in": "formData"
          },
          {
            "maxLength": 4000,
            "type": "string",
            "description": "the jwt token from service (self-signed) or from idp (federated IAMs).",
            "name": "assertion",
            "in": "formData"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/iam_token_response"
            }
          },
          "default": {
            "description": "Internal Error",
            "schema": {
              "$ref": "#/definitions/status"
            }
          }
        },
        "x-doc-hide": true
      }
    }
  },
  "definitions": {
    "api_version": {
      "description": "API Version of the Nutanix v3 API framework.",
      "type": "string",
      "title": "API Version",
      "default": "3.1.0",
      "readOnly": true
    },
    "iam_token_response": {
      "description": "IAM token response",
      "type": "object",
      "title": "IAM token response",
      "required": [
        "access_token",
        "token_type",
        "expires_in"
      ],
      "properties": {
        "access_token": {
          "description": "access_token",
          "type": "string"
        },
        "expires_in": {
          "description": "Token expiration time in seconds",
          "type": "integer",
          "format": "int64"
        },
        "token_type": {
          "description": "The typical value is \"bearer\".",
          "type": "string"
        }
      }
    },
    "status": {
      "description": "The status of a REST API call. Only used when there is a failure to\nreport.\n",
      "type": "object",
      "title": "Response Kind",
      "properties": {
        "api_version": {
          "$ref": "#/definitions/api_version"
        },
        "code": {
          "description": "The HTTP error code.",
          "type": "integer",
          "readOnly": true
        },
        "details": {
          "description": "Custom key-value details relevant to the status.",
          "type": "object",
          "additionalProperties": {
            "type": "string"
          },
          "readOnly": true
        },
        "kind": {
          "description": "The entitys kind. i.e. \"status\".",
          "type": "string",
          "readOnly": true
        },
        "message": {
          "description": "A sentence explaining the reason for the status.",
          "type": "string",
          "readOnly": true
        },
        "reason": {
          "description": "One snake case word.",
          "type": "string",
          "readOnly": true
        },
        "status": {
          "description": "Only value possible is \"failure\".",
          "type": "string",
          "readOnly": true
        }
      }
    }
  },
  "parameters": {
    "cloud_type": {
      "pattern": "(\\bAWS\\b|\\bAZURE\\b|\\bNUTANIX_HOSTED_CLOUD\\b|\\bONPREM_CLOUD\\b)",
      "type": "string",
      "description": "The Cloud Type.",
      "name": "cloud_type",
      "in": "path",
      "required": true
    },
    "uuid": {
      "pattern": "^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$",
      "type": "string",
      "format": "UUID",
      "x-example": "0e09cf83-ac68-4f28-af70-6df9a43df4f0",
      "description": "The UUID of the entity.",
      "name": "uuid",
      "in": "path",
      "required": true
    }
  },
  "securityDefinitions": {
    "basicAuth": {
      "type": "basic"
    }
  },
  "security": [
    {
      "basicAuth": []
    }
  ]
}`))
	FlatSwaggerJSON = json.RawMessage([]byte(`{
  "produces": [
    "application/json"
  ],
  "schemes": [
    "https"
  ],
  "swagger": "2.0",
  "info": {
    "description": "Move programming from the user to the machine.",
    "title": "IAM API",
    "version": "1.0.0"
  },
  "paths": {
    "/iam/service_token": {
      "post": {
        "description": "Token endpoint for service to service authentication",
        "consumes": [
          "application/x-www-form-urlencoded"
        ],
        "tags": [
          "iam"
        ],
        "summary": "Token endpoint for service to service authentication",
        "parameters": [
          {
            "maxLength": 1000,
            "type": "string",
            "description": "the service provider audience uri.",
            "name": "audience",
            "in": "formData"
          },
          {
            "maxLength": 1000,
            "type": "string",
            "description": "the service provider domain name.",
            "name": "domain",
            "in": "formData"
          },
          {
            "maxLength": 4000,
            "type": "string",
            "description": "the jwt token from service (self-signed) or from idp (federated IAMs).",
            "name": "assertion",
            "in": "formData"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/iam_token_response"
            }
          },
          "default": {
            "description": "Internal Error",
            "schema": {
              "$ref": "#/definitions/status"
            }
          }
        },
        "x-doc-hide": true
      }
    }
  },
  "definitions": {
    "api_version": {
      "description": "API Version of the Nutanix v3 API framework.",
      "type": "string",
      "title": "API Version",
      "default": "3.1.0",
      "readOnly": true
    },
    "iam_token_response": {
      "description": "IAM token response",
      "type": "object",
      "title": "IAM token response",
      "required": [
        "access_token",
        "token_type",
        "expires_in"
      ],
      "properties": {
        "access_token": {
          "description": "access_token",
          "type": "string"
        },
        "expires_in": {
          "description": "Token expiration time in seconds",
          "type": "integer",
          "format": "int64"
        },
        "token_type": {
          "description": "The typical value is \"bearer\".",
          "type": "string"
        }
      }
    },
    "status": {
      "description": "The status of a REST API call. Only used when there is a failure to\nreport.\n",
      "type": "object",
      "title": "Response Kind",
      "properties": {
        "api_version": {
          "$ref": "#/definitions/api_version"
        },
        "code": {
          "description": "The HTTP error code.",
          "type": "integer",
          "readOnly": true
        },
        "details": {
          "description": "Custom key-value details relevant to the status.",
          "type": "object",
          "additionalProperties": {
            "type": "string"
          },
          "readOnly": true
        },
        "kind": {
          "description": "The entitys kind. i.e. \"status\".",
          "type": "string",
          "readOnly": true
        },
        "message": {
          "description": "A sentence explaining the reason for the status.",
          "type": "string",
          "readOnly": true
        },
        "reason": {
          "description": "One snake case word.",
          "type": "string",
          "readOnly": true
        },
        "status": {
          "description": "Only value possible is \"failure\".",
          "type": "string",
          "readOnly": true
        }
      }
    }
  },
  "parameters": {
    "cloud_type": {
      "pattern": "(\\bAWS\\b|\\bAZURE\\b|\\bNUTANIX_HOSTED_CLOUD\\b|\\bONPREM_CLOUD\\b)",
      "type": "string",
      "description": "The Cloud Type.",
      "name": "cloud_type",
      "in": "path",
      "required": true
    },
    "uuid": {
      "pattern": "^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$",
      "type": "string",
      "format": "UUID",
      "x-example": "0e09cf83-ac68-4f28-af70-6df9a43df4f0",
      "description": "The UUID of the entity.",
      "name": "uuid",
      "in": "path",
      "required": true
    }
  },
  "securityDefinitions": {
    "basicAuth": {
      "type": "basic"
    }
  },
  "security": [
    {
      "basicAuth": []
    }
  ]
}`))
}
